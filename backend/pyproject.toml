[project]
name = "Delphi"
version = "0.1.0"
description = "A Dodona clone"
authors = [
    {name = "Mathieu Slypsteen", email = "mathieu.slypsteen@ugent.be"},
    {name = "Albéric Loos", email = "alberic.loos@ugent.be"},
    {name = "Emma Vandewalle", email = "emma.vandewalle@ugent.be"},
    {name = "Lukas Barragan Torres", email = "lukas.barragantorres@ugent.be"},
    {name = "Matthias Seghers", email = "matthias.seghers@ugent.be"},
    {name = "Robbe Van de Keere", email = "robbe.vandekeere@ugent.be"},
    {name = "Ruben Vandamme", email = "ruben.vandamme@ugent.be"},
    {name = "Stef Ossé", email = "stef.osse@ugent.be"}
]
python = ">=3.12"

[tool.pyright]
exclude = [
    ".venv"
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.12
target-version = "py312"




[tool.ruff.lint]
select = [
    "ALL",
    # "F",   # Pyflakes
    # "E",   # Pycodestyle
    # "W",   # Warnings
    # "I",   # Isort (sorted imports)
    # "N",   # PEP8
    # "A",   # Flake8-builtins
    # "C4",  # Comprehensions
    # "PIE", # flake8 pie
    # "Q",   # Quotes
    # "RET", # returns
    # "SIM", # simplify
    # "ARG", # unused arguments
    # "ERA", # no commented out code
    # "PL"   # all pylint
]
ignore = [
    "D", # Docstrings
    "ANN101", # type annotation for self
    "S201",   # Use of `debug=True` in Flask app detected
    "INP001", # File `...` is part of an implicit namespace package
    "S101",   # is nodig voor de testen
    "TCH001", # Move application import `...` into a type-checking block (dit is enkel voor performance)
    "RUF009"  # Do not perform function call `...` in dataclass defaults but needed for sql alchemy
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"



[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"